openapi: 3.0.3
info:
  title: Delivery Microservice
  description: OpenAPI specifications for delivery microservice
  version: 1.0.0
servers:
  - url: 'https://localhost:8081'
tags:
  - name: Customer
    description: Endpoints that can be used by Customers.
  - name: Vendor
    description: Endpoints that can be used by Vendors.
  - name: Courier
    description: Endpoints that can be used by Couriers.
  - name: Admin Only
    description: Endpoints that are only accessible by Admins. All other endpoints are also accessible by Admins.

paths:

# ============
# Constructors
# ============

  /delivery:
      post:
        tags:
          - Vendor
        description: This endpoint is called automatically by the order microservice when an order instance is created.
        requestBody:
          description: Create a new instance of Delivery.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryConstructionParameters'
          required: true
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Delivery'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorMessageResponse'
                example:
                  error: Invalid properties
                  message: Delivery object properties must be valid.
          '403':
            description: Forbidden
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorMessageResponse'
                example:
                  error: Permission not granted
                  message: Not allowed

  /restaurant:
    post:
      tags:
        - Admin Only
      description: Create a new Restaurant object with a Vendor as the owner, and Couriers that perform deliveries for it.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantConstructionParameters'
        required: true
      responses:
        '200':
          description: Returns the created Restaurant object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Invalid properties
                message: Delivery object properties must be valid.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Permission not granted
                message: Not allowed

# ========
# Delivery
# ========

  /delivery/{deliveryID}:
    get:
      tags:
        - Customer
        - Vendor
        - Courier
      description: Get a delivery object by its id.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: integer
            format: int64
          required: true
          description: Id of the delivery to get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Permission not granted
                message: Not allowed
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Not found
                message: Delivery object with that id could not be found.

  /delivery/{deliveryID}/orderID:
    get:
      tags:
        - Customer
        - Vendor
        - Courier
      description: Get the order ID that a delivery is associated with.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: integer
            format: int64
          required: true
          description: ID of the delivery to get.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDResponse'
              example: 0
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Permission not granted
                message: Not allowed
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Not found
                message: Delivery object with that id could not be found.

  /delivery/{deliveryID}/courierID:
    get:
      tags:
        - Vendor
      description: As a vendor, query a delivery's assigned courier.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: integer
            format: int64
          required: true
          description: The delivery for which the courier should be queried.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
              example:
                Courier Id: 124
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Permission not granted
                message: This function can only be accessed by a vendor
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Delivery not found
                message: No delivery with this id has been found

  /delivery/{deliveryID}/customerID:
    get:
      tags:
        - Vendor
      description: As a vendor, query a delivery's assigned customer.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: integer
            format: int64
          required: true
          description: The delivery for which the customer should be queried.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
              example:
                CustomerID: 124
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Permission not granted
                message: This function can only be accessed by a vendor
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Delivery not found
                message: No delivery with this id has been found

  /delivery/{deliveryID}/time/pickupTimeEstimate:
    get:
      tags:
        - Customer
        - Vendor
        - Courier
      description: Get the estimated pickup time for a delivery.
      parameters:
        - in: path
          name: deliveryID
          description: ID of the delivery to query.
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: date-time
              example:
                pickupTimeEstimate: 2023-11-29-11-30-26
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Delivery not found
                message: No delivery with this ID has been found.
    patch:
      tags:
        - Vendor
      description: As a vendor, set a delivery's pickup time estimate.
      parameters:
        - in: path
          name: deliveryID
          description: ID of the delivery to query.
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  pickupTimeEstimate:
                    type: string
                    format: date-time
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
              example:
                id: 123
                name: Updated Delivery
                description: The delivery has been updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Invalid delivery time
                message: The delivery time must be a valid entry
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Permission not granted
                message: This function can only be accessed by a vendor
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Delivery not found
                message: No delivery with this id has been found

  /delivery/{deliveryID}/time/deliveryTimeEstimate:
    get:
      tags:
        - Customer
        - Vendor
        - Courier
      description: Get the estimated delivery time for a delivery.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: integer
            format: int64
          required: true
          description: The ID of the delivery for which the delivery time estimate will be queried.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: date-time
              example:
                delivery time: 2023-11-29-11-30-26
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Permission not granted
                message: This function can only be accessed by a vendor
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Delivery not found
                message: No delivery with this id has been found
    patch:
      tags:
        - Vendor
      description: As a vendor, set the estimated delivery time for a delivery.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: integer
            format: int64
          required: true
          description: The id of the delivery to which the delivery time will be assigned
      requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  deliveryTimeEstimate:
                    type: string
                    format: date-time
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
              example:
                id: 123
                name: Updated Delivery
                description: The delivery has been updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Invalid delivery time
                message: The delivery time must be a valid entry
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Permission not granted
                message: This function can only be accessed by a vendor
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Delivery not found
                message: No delivery with this id has been found

  /delivery/{deliveryID}/rating:
    get:
      tags:
        - Customer
        - Vendor
        - Courier
      description: Get the rating for a delivery.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to query.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  rating:
                    type: integer
                    format: int32
              example:
                rating: 4
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Delivery not found
                message: No delivery with this ID has been found.
    patch:
      tags:
        - Customer
      summary: Rate a delivery
      description: Rate an delivery with a rating from 1 to 5
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to rate
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
                  format: int64
                  minimum: 1
                  maximum: 5
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Permission not granted
                message: You cannot access modify this delivery's rating as you are not the customer assigned to it
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Delivery not found
                message: No delivery with this id has been found

# TODO Get picked up timestamp? Can also just be fetched from delivery object

  /delivery/{deliveryID}/liveLocation:
    get:
      tags:
        - Customer
        - Vendor
        - Courier
      description: Get the most recently updated location of the delivery
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to get the location of
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example:
                liveLocation: "123.456,123.456"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Permission not granted
                message: You cannot get this delivery's location
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Delivery not found
                message: No delivery with this id has been found
    patch:
      tags:
        - Domain Courier
      description: Update the location of the delivery
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to update the location of
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                liveLocation:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 200
                type: success
                message: Location updated
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Permission not granted
                message: You cannot access modify this delivery's location as you are not the courier assigned to it
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
              example:
                error: Delivery not found
                message: No delivery with this id has been found

# TODO Get delivery exception message
# TODO Set delivery exception message

# TODO Get delivery delay
# TODO Set delivery delay

# TODO Get delivery owning restaurant
# TODO Set delivery owning restaurant

  /delivery/{deliveryID}/status/accept:
    patch:
      tags:
        - Vendor
      summary: Mark a pending order as accepted.
      description: Changes the status of a pending order to accepted. Can only be called on pending orders, and only by a vendor that has authority over the order.
      parameters:
        - name: deliveryID
          in: path
          description: ID of the delivery to mark as accepted.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Delivery cannot be accepted.
                message: The given delivery should currently be marked pending.
        '403':
          description: Forbidden
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Invalid authorization to modify delivery.
                message: You must be a vendor or an admin to accept deliveries.
        '404':
          description: Delivery not found
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Delivery does not exist.
                message: The given delivery ID should point to an existing delivery.

  /delivery/{deliveryID}/status/reject:
    patch:
      tags:
        - Vendor
      summary: Mark a pending delivery as rejected.
      description: Changes the status of a pending delivery to rejected. Can only be called on pending deliveries, and only by a vendor that has authority over the delivery.
      parameters:
        - name: deliveryID
          in: path
          description: ID of the delivery to mark as rejected.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Delivery cannot be rejected.
                message: The given delivery should currently be marked pending.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Invalid authorization to modify delivery.
                message: You must be a vendor or an admin to reject deliveries.
        '404':
          description: Delivery not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Delivery does not exist.
                message: The given delivery ID should point to an existing delivery.

  /delivery/{deliveryID}/status/edit:
    patch:
      tags:
        - Vendor
      summary: Change a delivery's status as a vendor.
      description: Change the status of a currently 'accepted' or 'preparing' order to 'preparing' or 'given to courier'.
      parameters:
        - name: deliveryID
          in: path
          description: ID of the delivery to edit the status of.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
          description: The new status must be 'preparing' or 'given to courier'.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Delivery status cannot be modified.
                message: The given delivery should currently be 'accepted' or 'preparing'.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Invalid authorization to modify delivery.
                message: You must be a vendor or an admin to modify delivery statuses.
        '404':
          description: Delivery not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
              example:
                error: Delivery does not exist.
                message: The given delivery ID should point to an existing delivery.

  /delivery/{deliveryID}/status/delivered:
    patch:
      tags:
        - Courier
      summary: Mark a delivery as delivered.
      description: Mark the delivery with specific ID as delivered.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to complete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '403':
          description: Forbidden
        '404':
          description: Order not found

# TODO Get delivery location

# TODO Get restaurant vendor ID

# TODO Get restaurant couriers

# TODO Get restaurant max delivery distance

  # /delivery/vendor/getDeliveryZone:
  #   get:
  #     tags:
  #       - Domain Vendor
  #     description: As a vendor, query your own delivery zone range, using your own id

  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               type: number
  #               format: double
  #             example:
  #               delivery zone: 12.5d

# TODO Set restaurant max delivery distance



# TODO Get restaurants owned by vendor

# TODO Get deliveries of vendor

# TODO Get deliveries of courier

  # /delivery/courier/getOrders/{courier_id}:
  #   get:
  #     tags:
  #       - Domain Vendor
  #     description: As a vendor, return all order ids for a given courier
  #     parameters:
  #       - in: path
  #         name: courier_id
  #         schema:
  #           type: number
  #           format: long
  #         required: true
  #         description: The id of the courier to which the delivery will be assigned
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  #             example:
  #               orders: 124-126-228

  #       '403':
  #         description: Forbidden
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 error:
  #                   type: string
  #                 message:
  #                   type: string
  #             example:
  #               error: Permission not granted
  #               message: This function can only be accessed by a vendor
  #       '404':
  #         description: Not found
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 error:
  #                   type: string
  #                 message:
  #                   type: string
  #             example:
  #               error: Order not found
  #               message: No courier with this id has been found

# TODO Get deliveries of customer

# TODO Give delivery to courier

  # /delivery/vendor/assignOrder/{courier_id}/{order_id}:
  #       patch:
  #         tags:
  #           - Domain Vendor
  #         description: As a vendor, assign a specific order to a courier
  #         parameters:
  #           - in: path
  #             name: courier_id
  #             schema:
  #               type: number
  #               format: long
  #             required: true
  #             description: The id of the courier to which the delivery will be assigned
  #           - in: path
  #             name: order_id
  #             schema:
  #               type: number
  #               format: long
  #             required: true
  #             description: The order to be assigned to the courier
  
  #         responses:
  #           '200':
  #             description: OK
  #             content:
  #               application/json:
  #                 schema:
  #                   type: object
  #                   properties:
  #                     courier_id:
  #                       type: number
  #                       format: long
  #                     order_id:
  #                       type: number
  #                       format: long
  #                     name:
  #                       type: string
  #                     description:
  #                       type: string
  #                 example:
  #                   courier_id: 123
  #                   order_id: 456
  #                   name: Assigned Order
  #                   description: The order has been assigned to the courier successfully
  
  #           '403':
  #             description: Forbidden
  #             content:
  #               application/json:
  #                 schema:
  #                   type: object
  #                   properties:
  #                     error:
  #                       type: string
  #                     message:
  #                       type: string
  #                 example:
  #                   error: Permission not granted
  #                   message: This function can only be accessed by a vendor
  
  #           '404':
  #             description: Not found
  #             content:
  #               application/json:
  #                 schema:
  #                   type: object
  #                   properties:
  #                     error:
  #                       type: string
  #                     message:
  #                       type: string
  #                 example:
  #                   error: Order or courier not found
  #                   message: No order or courier with the given ids have been found

  # /orders/courier/choose/{order_id}/{user_id}:
  #   patch:
  #     tags:
  #       - Domain Courier
  #     summary: Assign an existing order to courier
  #     description: Assign an existing order by order_id and user_id
  #     parameters:
  #       - name: order_id
  #         in: path
  #         description: ID of order to assign
  #         required: true
  #         schema:
  #           type: integer
  #       - name: user_id
  #         in: path
  #         description: ID of user to assign to
  #         required: true
  #         schema:
  #           type: integer
  #     responses:
  #       '200':
  #         description: Successful operation
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ApiResponse'
  #       '403':
  #         description: Forbidden
  #       '404':
  #         description: Order or courier not found


# TODO Fetch ratings of courier

# TODO Add courier to restaurant
# TODO Remove courier from restaurant

components:
  schemas:
    Delivery:
      type: object
      properties:
        deliveryID:
          type: integer
          format: int64
          example: 98
        orderID:
          type: integer
          format: int64
          example: 98
        customerID:
          type: integer
          format: int64
          example: 8942
        courierID:
          type: integer
          format: int64
          example: 798
        restaurantID:
          type: integer
          format: int64
          example: 512
        pickupTimeEstimate:
          type: integer
          format: int32
          example: 3600
        deliveryTimeEstimate:
          type: integer
          format: int32
          example: 3600
        customerRating:
          type: integer
          format: int32
          example: 4
        pickedUpTime:
          type: object
          example: 2022-01-10T15:23:44Z
        liveLocation:
          type: string
          example: 52.00667,4.35556
        userException:
          type: string
          example: Rider has fallen
        delay:
          type: integer
          format: int32
          example: 15
   
    DeliveryConstructionParameters:
      type: object
      properties:
        orderID:
          type: integer
          format: int64
        customerID:
          type: integer
          format: int64
        vendorID:
          type: integer
          format: int64
   
    Restaurant:
      type: object
      properties:
        restaurantID:
          type: integer
          format: int64
          example: 42
        vendorID:
          type: integer
          format: int64
          example: 612
        courierIDs:
          type: array
          items:
            properties:
              courierID:
                type: integer
                format: int64
        maxDeliveryZone:
          type: integer
          format: int32
          example: 500
   
   # While the data types are the same as for Restaurant,
   # this is a separate Schema Object as the data's meanings
   # are different.
    RestaurantConstructionParameters:
      type: object
      properties:
        ownerID:
          type: integer
          format: int64
        courierIDs:
          type: array
          items:
            properties:
              courierID:
                type: integer
                format: int64
        maxDeliveryZone:
          type: integer
          format: int32
   
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    
    # A simple response with an error (that briefly describes what
    # went wrong) and a message (that details the error).
    ErrorMessageResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
    
    # A response that holds an ID referencing a database object.      
    IDResponse:
      type: integer
      format: int64
    
    # A response that holds a list of database object IDs.
    IDListResponse:
      type: array
      items:
        properties:
          ID:
            type: integer
            format: int64
  
    
    
    
    
    