openapi: 3.0.3
info:
  title: Delivery Microservice
  description: OpenAPI specifications for delivery microservice
  version: 1.0.0
servers:
  - url: 'https://localhost:8082'
tags:
  - name: Global
    description: Endpoints that can be used by any role.
  - name: Customer
    description: Endpoints that can only be used by Customers.
  - name: Vendor
    description: Endpoints that can only be used by Vendors.
  - name: Courier
    description: Endpoints that can only be used by Couriers.
  - name: VendorOrCourier
    description: Endpoints that can only be used by either Vendors or Couriers.
  - name: Admin
    description: Endpoints that are only accessible by Admins. All other endpoints are also accessible by Admins.

paths:

  # ============
  # Constructors
  # ============

  /delivery:
    post:
      tags:
        - Vendor
      operationId: createDelivery
      summary: Create a delivery object
      description: This endpoint is called automatically by the order microservice when an order instance is created. If no restaurant is associated with the given vendor, a new one will be created automatically.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delivery'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example:
                "error 400"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"

  /restaurant:
    post:
      operationId: createRestaurant
      tags:
        - Admin
      summary: Create a restaurant object
      description: Create a new Restaurant object with a Vendor as the owner, and Couriers that perform deliveries for it.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      responses:
        '200':
          description: Returns the created Restaurant object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example:
                "error 400"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"

  # ========
  # Delivery
  # ========

  /delivery/{deliveryID}:
    get:
      operationId: getDeliveyById
      tags:
        - Global
      summary: Get a delivery object
      description: Get a delivery object by its id.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: string
            format: uuid
          required: true
          description: Id of the delivery to get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
  /delivery/{deliveryID}/orderID:
    get:
      operationId: getOrderByDeliveryId
      tags:
        - Global
      summary: Get the orderID of a delivery
      description: Get the order ID that a delivery is associated with.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: string
            format: uuid
          required: true
          description: ID of the delivery to get.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
              example:
                14
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/courierID:
    get:
      operationId: getCourierByDeliveryId
      tags:
        - Vendor
      summary: Get the courierID of a delivery
      description: As a vendor, query a delivery's assigned courier.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: string
            format: uuid
          required: true
          description: The delivery for which the courier should be queried.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
              example:
                courierID: 124
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"
  /delivery/{deliveryID}/customerID:
    get:
      operationId: getCustomerByDeliveryId
      tags:
        - Vendor
      summary: Get the customerId of a delivery
      description: As a vendor, query a delivery's assigned customer.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: string
            format: uuid
          required: true
          description: The delivery for which the customer should be queried.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
              example:
                customerID: 124
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/time/pickupTimeEstimate:
    get:
      operationId: getPickUpTime
      tags:
        - Global
      summary: Get the pickup time for a delivery
      description: Get the estimated pickup time for a delivery.
      parameters:
        - in: path
          name: deliveryID
          description: ID of the delivery to query.
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: date-time
              example:
                pickupTimeEstimate: 2023-11-29-11-30-26
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"
    patch:
      operationId: setPickUpTime
      tags:
        - Vendor
      summary: Set the pickup time for a delivery
      description: As a vendor, set a delivery's pickup time estimate.
      parameters:
        - in: path
          name: deliveryID
          description: ID of the delivery to query.
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: string
              properties:
                pickupTimeEstimate:
                  type: string
                  format: date-time
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
              example:
                id: 123
                name: Updated Delivery
                description: The delivery has been updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example:
                "error 400"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/time/deliveryTimeEstimate:
    get:
      operationId: getDeliveryEstimate
      tags:
        - Global
      summary: Get the delivery time for a delivery
      description: Get the estimated delivery time for a delivery.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the delivery for which the delivery time estimate will be queried.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: date-time
              example:
                delivery time: 2023-11-29-11-30-26
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"
    patch:
      operationId: setDeliveryEstimate
      tags:
        - Vendor
      summary: Set the delivery time for a delivery
      description: As a vendor, set the estimated delivery time for a delivery.
      parameters:
        - in: path
          name: deliveryID
          schema:
            type: string
            format: uuid
          required: true
          description: The id of the delivery to which the delivery time will be assigned
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: date-time
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example:
                "200 OK"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example:
                "error 400"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/rating:
    get:
      operationId: getRateByDeliveryId
      tags:
        - Global
      summary: Get the rating for a delivery.
      description: Get the rating for a delivery between 0-1.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to query.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: number
                format: double
              example:
                rating: 0.5
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"
    patch:
      operationId: setRateOfDelivery
      tags:
        - Customer
      summary: Set the rating for a delivery
      description: Rate a delivery with a rating as a double between 0 and 1
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to rate
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: number
              format: double
              minimum: 0
              maximum: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
              example:
                "200 OK"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/pickedUpTime:
    get:
      operationId: getPickUpEstimateDeliveryId
      tags:
        - Global
      summary: Get the pickup time for a delivery
      description: Get the time at which a delivery order has been picked up
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to get the picked up timestamp of
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: date-time
              example:
                timePickedUp: 2023-11-30-19-48
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"


  /delivery/{deliveryID}/liveLocation:
    get:
      operationId: getLiveLocation
      tags:
        - Global
      summary: Get the location of a delivery
      description: Get the most recently updated location of the delivery
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to get the location of
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example:
                liveLocation: "123.456,123.456"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"
    patch:
      operationId: setLiveLocation
      tags:
        - Courier
      summary: Set the location of a delivery
      description: Update the location of the delivery with its coordinates
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to update the location of
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example:
                "200 OK"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/userException:
    get:
      operationId: getDeliveryException
      tags:
        - Global
      summary: Get the exceptions for a delivery
      description: Get the user exceptions for a delivery.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to query.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example:
                userException: Rider fell off
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"
    patch:
      operationId: setDeliveryException
      tags:
        - Courier
      summary: Set the exceptions for a delivery
      description: As a courier, set a delivery's exception message.
      parameters:
        - in: path
          name: deliveryID
          description: ID of the delivery to query.
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example:
                "200 OK"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
              example:
                "error 400"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/delay:
    get:
      operationId: getDeliveryDelay
      tags:
        - VendorOrCourier
      summary: Get the delay for a delivery
      description: Get the delay for a delivery.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to query.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
              example:
                delay: 15
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

    patch:
      operationId: setDeliveryDelay
      tags:
        - VendorOrCourier
      summary: Set the delay for a delivery
      description: Set the delay for a delivery.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to update.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int32
            example:
              delay: 15
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
              example:
                delay: 15
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"


  /delivery/{deliveryID}/restaurant:
    get:
      operationId: getRestIdOfDel
      tags:
        - Global
      summary: Get the restaurantID for a delivery
      description: Get the owning restaurant for a delivery.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to query.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
              example:
                restaurant: 5826
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

    patch:
      operationId: setRestIdOfDelivery
      tags:
        - Admin
      summary: Set the restaurantID for a delivery
      description: Set the owning restaurant for a delivery.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to update.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: uuid
            example:
              restaurant: 6651
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
              example:
                restaurant: 6651
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/status/accept:
    patch:
      operationId: acceptDelivery
      tags:
        - Vendor
      summary: Mark a pending delivery as accepted
      description: Changes the status of a pending order to accepted. Can only be called on pending orders, and only by a vendor that has authority over the order.
      parameters:
        - name: deliveryID
          in: path
          description: ID of the delivery to mark as accepted.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
              example:
                "error 400"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Delivery not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/status/reject:
    patch:
      operationId: rejectDelivery
      tags:
        - Vendor
      summary: Mark a pending delivery as rejected
      description: Changes the status of a pending delivery to rejected. Can only be called on pending deliveries, and only by a vendor that has authority over the delivery.
      parameters:
        - name: deliveryID
          in: path
          description: ID of the delivery to mark as rejected.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
              example:
                "error 400"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Delivery not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/{deliveryID}/status/edit:
    patch:
      operationId: editStatusDelivery
      tags:
        - Vendor
      summary: Set the status for a delivery
      description: Change the status of a currently 'accepted' or 'preparing' order to 'preparing' or 'given to courier'.
      parameters:
        - name: deliveryID
          in: path
          description: ID of the delivery to edit the status of.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: The new status must be 'preparing' or 'given to courier'.
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
              example:
                "error 400"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Delivery not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"

  /delivery/{deliveryID}/status/delivered:
    patch:
      operationId: deliveryIdDone
      tags:
        - Courier
      summary: Mark a delivery as delivered
      description: Mark the delivery with specific ID as delivered.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to complete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
              example:
                "200 OK"
        '403':
          description: Forbidden
        '404':
          description: Order not found

  /delivery/{deliveryID}/destination/:
    get:
      operationId: getLocationOfDelivery
      tags:
        - Courier
      summary: Get the delivery location for a delivery
      description: Get delivery's location
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to get end location of
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
              example:
                liveLocation: "123.456,123.456"
        '403':
          description: Forbidden
        '404':
          description: Order not found

  /delivery/{deliveryID}/pickUpLocation/:
    get:
      operationId: getPickUpLocation
      tags:
        - Courier
      summary: Get the pickup location for a delivery
      description: Get the location of the restaurant from which to pick up the order.
      parameters:
        - name: deliveryID
          in: path
          description: ID of delivery to get start location of
          required: true
          schema:
            type: string
            format: uuid
        - name: role
          in: query
          description: The role of the user
          required: true
          schema:
            type: string
            enum:
              - vendor
              - courier
              - customer
              - admin
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
              example:
                location: "123.456,123.456"
        '403':
          description: Forbidden
        '404':
          description: Order not found



  # Provides a single getter for all of Restaurant's fields, since it's a small object.
  /restaurant/{restaurantID}:
    get:
      operationId: getRest
      tags:
        - Vendor
      summary: Get a restaurant object
      description: Fetch a restaurant object.
      parameters:
        - name: restaurantID
          in: path
          description: ID of the restaurant to query.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example:
                "200 OK"
        '403':
          description: Forbidden
        '404':
          description: Restaurant not found

  /restaurant/{restaurantID}/deliveryZone:
    get:
      operationId: getMaxDeliveryZone
      tags:
        - Global
      summary: Get the maximum delivery zone for a restaurant
      description: Query a restaurant's maximum delivery zone, using a restaurant ID.
      parameters:
        - name: restaurantID
          in: path
          description: ID of the restaurant to query.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: number
                format: double
              example:
                delivery zone: 12.5d
        '403':
          description: Forbidden
        '404':
          description: Restaurant not found

    patch:
      operationId: setMaxDeliveryZone
      tags:
        - Vendor
      summary: Set the maximum delivery zone for a restaurant
      description: As a vendor, update your own maximum delivery zone.
      parameters:
        - name: restaurantID
          in: path
          description: ID of the restaurant to modify.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Leave the delivery zone blank to reset to the default value instead.
        content:
          application/json:
            schema:
              type: number
              format: double
        required: false
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: string
              example:
                "error 400"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /restaurant/{vendorID}:
    get:
      operationId: getVendorRest
      tags:
        - Vendor
      summary: Get a vendor's restaurants
      description: As a vendor, query all the restaurants you own.
      parameters:
        - name: vendorID
          in: path
          description: ID of the vendor to query.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    restaurantID:
                      type: string
                      format: uuid
        '403':
          description: Forbidden
        '404':
          description: Vendor not found

  /delivery/vendor/{vendorID}:
    get:
      operationId: getAllDeliveriesVendor
      tags:
        - Vendor
      summary: Get all deliveries for a vendor
      description: As a vendor, return all delivery ids assigned to vendor
      parameters:
        - in: path
          name: vendorID
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the vendor to query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
                example: [550e8400-e29b-41d4-a716-446655440000, 550e8400-439d-41d4-a716-446655440001]
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/courier/{courierID}:
    get:
      operationId: getAllDeliveriesCourier
      tags:
        - Courier
      summary: Get all deliveries for a courier
      description: As a vendor or courier, return all delivery ids for a given courier
      parameters:
        - in: path
          name: courierID
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the courier to query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
              example: [ 550e8400-e29b-41d4-a716-446655440000, 550e8400-439d-41d4-a716-446655440001 ]

        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/customer/{customerID}:
    get:
      operationId: getAllDeliveriesCustomer
      tags:
        - Customer
      summary: Get all deliveries for a customer
      description: As a customer, return all delivery ids for a given customer
      parameters:
        - in: path
          name: customerID
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the customer to query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
              example: [ 550e8400-e29b-41d4-a716-446655440000, 550e8400-439d-41d4-a716-446655440001 ]

        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/courier/{courierID}/assign/{deliveryID}:
    patch:
      operationId: assignOrderToCourier
      tags:
        - VendorOrCourier
      summary: Assign an order to a courier
      description: As a vendor or the relevant courier, assign a specific order to a courier.
      parameters:
        - in: path
          name: courierID
          schema:
            type: string
            format: uuid
          required: true
          description: The id of the courier to which the delivery will be assigned
        - in: path
          name: deliveryID
          schema:
            type: string
            format: uuid
          required: true
          description: The delivery to be assigned to the courier
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
              example:
                [{ 101, 202}]
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
                example:
                  "error 404"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /delivery/courier/{courierID}/avg_rating:
    get:
      operationId: getAvRateCourier
      tags:
        - Courier
      summary: Get the average rating (double 0-1) for a courier
      description: Query the average rating over all orders for a courier
      parameters:
        - in: path
          name: courierID
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the courier to query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: number
                format: double
              example:
                avg_rate: 0.5
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /restaurant/{restaurantID}/add/courier/{courierID}:
    patch:
      operationId: addCourierToRest
      tags:
        - Vendor
      summary: Add a courier to a restaurant
      description: A vendor can add a courier to its restaurant
      parameters:
        - in: path
          name: courierID
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the courier to query
        - in: path
          name: restaurantID
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the restaurant to query
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

  /restaurant/{restaurantID}/remove/courier/{courierID}:
    patch:
      operationId: removeCourierRest
      tags:
        - Vendor
      summary: Remove a courier from a restaurant
      description: A vendor can remove a courier from its restaurant
      parameters:
        - in: path
          name: courierID
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the courier to query
        - in: path
          name: restaurantID
          schema:
            type: string
            format: uuid
          required: true
          description: The ID of the restaurant to query
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
              example:
                "error 403"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: string
              example:
                "error 404"

components:
  schemas:
    Delivery:
      type: object
      properties:
        deliveryID:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        orderID:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        customerID:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        courierID:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        restaurantID:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        status:
          type: string
          example: "pending"
        pickupTimeEstimate:
          type: string
          format: date-time
          example: 2022-01-10T15:23:44Z
        deliveryTimeEstimate:
          type: string
          format: date-time
          example: 2022-01-10T15:23:44Z
        customerRating:
          type: number
          format: double
          example: 0.5
        pickedUpTime:
          type: string
          format: date-time
          example: 2022-01-10T15:23:44Z
        liveLocation:
          type: string
          example: 52.00667,4.35556
        userException:
          type: string
          example: Rider has fallen
        delay:
          type: integer
          format: int32
          example: 15

    Restaurant:
      type: object
      properties:
        restaurantID:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        vendorID:
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
        courierIDs:
          type: array
          items:
            properties:
              courierID:
                type: string
                format: uuid
        maxDeliveryZone:
          type: number
          format: double
          example: 500
  securitySchemes:
    UserIDApiKey:
      type: apiKey
      in: header
      name: X-User-Id
security:
  - UserIDApiKey: [ ]
